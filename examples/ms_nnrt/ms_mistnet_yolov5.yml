clients:
    # Type
    type: mistnet

    # The total number of clients
    total_clients: 1

    # The number of clients selected in each round
    per_round: 1

    # Should the clients compute test accuracy locally?
    do_test: false

server:
    type: mistnet

    address: 127.0.0.1
    port: 8000

data:
    # The training and testing dataset
    datasource: YOLO
    data_params: packages/yolov5/yolov5/data/coco128.yaml

    # Where the dataset is located
    data_path: ./data/coco_srew
    train_path: ./data/coco_srew/train2017/
    train_annFile: ./data/coco_srew/annotations/instances_train2017.json
    test_path: ./data/coco_srew/val2017/
    test_annFile: ./data/coco_srew/annotations/instances_val2017.json
    # download command/URL (optional)
    download_urls:
        [
            "https://github.com/ultralytics/yolov5/releases/download/v1.0/coco128.zip",
        ]

    # number of training examples
    num_train_examples: 296

    # number of testing examples
    num_test_examples: 73

    # number of classes
    num_classes: 3

    # image size
    image_size: 1472

    # class names
    classes:
        [
            "S1",
            "S2",
            "S3"
        ]

    # Number of samples in each partition
    partition_size: 296

    # IID or non-IID?
    sampler: all_inclusive

    # Input height
    input_height: 1472

    # Input width
    input_width: 1472

trainer:
    # The type of the trainer
    type: yolov5

    # The maximum number of training rounds
    rounds: 1

    # Whether the training should use multiple GPUs if available
    parallelized: false

    # The maximum number of clients running concurrently
    max_concurrency: 3

    # The target accuracy
    target_accuracy: 0.99

    # Number of epoches for local training in each communication round
    epochs: 200
    batch_size: 8
    optimizer: SGD
    linear_lr: false

    # The machine learning model
    model_name: yolov5
    model_config: packages/yolov5/yolov5/models/yolov5s.yaml
    train_params: packages/yolov5/yolov5/data/hyp.scratch.yaml

    # OM file path
    om_path: ./models/yolov5_cutlayer4.om

    # Device ID
    deviceID: 0

    # framework
    use_nnrt: true

algorithm:
    # Aggregation algorithm
    type: mistnet

    #cut_layer: 4
    epsilon: 100

params:
    grid_size: 32